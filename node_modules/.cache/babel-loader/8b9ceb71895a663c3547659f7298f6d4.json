{"ast":null,"code":"var _jsxFileName = \"/home/troias/udemy/project-6/04-onwards-to-a-more-realistic-example/src/components/NewTask/NewTask.js\",\n    _s = $RefreshSig$();\n\n// import { useState } from 'react';\nimport { useFetch } from '../../customHooks/useFetch';\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n  const [fetchTasks, isLoading, error] = useFetch(\"\", \"POST\");\n\n  const enterTaskHandler = async taskText => {\n    fetchTasks(taskText); // setIsLoading(true);\n    // setError(null);\n    // try {\n    //   const response = await fetch(\n    //     'https://react-http-1-f6f8f-default-rtdb.firebaseio.com/tasks.json',\n    //     {\n    //       method: 'POST',\n    //       body: JSON.stringify({ text: taskText }),\n    //       headers: {\n    //         'Content-Type': 'application/json',\n    //       },\n    //     }\n    //   );\n    //   if (!response.ok) {\n    //     throw new Error('Request failed!');\n    //   }\n    //   const data = await response.json();\n    //   const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n    //   const createdTask = { id: generatedId, text: taskText };\n    // props.onAddTask(createdTask);\n    // } catch (err) {\n    //   setError(err.message || 'Something went wrong!');\n    // }\n    // setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTask, \"JlEDq8NhyXDdBiFxiLXgBriCMCg=\", false, function () {\n  return [useFetch];\n});\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["/home/troias/udemy/project-6/04-onwards-to-a-more-realistic-example/src/components/NewTask/NewTask.js"],"names":["useFetch","Section","TaskForm","NewTask","props","fetchTasks","isLoading","error","enterTaskHandler","taskText"],"mappings":";;;AAAA;AACA,SAAQA,QAAR,QAAuB,4BAAvB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB;AACA;AACA,QAAM,CAAEC,UAAF,EAAcC,SAAd,EAAyBC,KAAzB,IAAmCP,QAAQ,CAAC,EAAD,EAAK,MAAL,CAAjD;;AAEA,QAAMQ,gBAAgB,GAAG,MAAOC,QAAP,IAAoB;AAC3CJ,IAAAA,UAAU,CAACI,QAAD,CAAV,CAD2C,CAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEE;AACF;AACA;AACA;AACA;AACD,GA9BD;;AAgCA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,WAAW,EAAED,gBAAvB;AAAyC,MAAA,OAAO,EAAEF;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,KAAK,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA3CD;;GAAMJ,O;UAGqCH,Q;;;KAHrCG,O;AA6CN,eAAeA,OAAf","sourcesContent":["// import { useState } from 'react';\nimport {useFetch} from '../../customHooks/useFetch'\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\n\nconst NewTask = (props) => {\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n  const [ fetchTasks, isLoading, error ] = useFetch(\"\", \"POST\")\n\n  const enterTaskHandler = async (taskText) => {\n    fetchTasks(taskText)\n    // setIsLoading(true);\n    // setError(null);\n    // try {\n    //   const response = await fetch(\n    //     'https://react-http-1-f6f8f-default-rtdb.firebaseio.com/tasks.json',\n    //     {\n    //       method: 'POST',\n    //       body: JSON.stringify({ text: taskText }),\n    //       headers: {\n    //         'Content-Type': 'application/json',\n    //       },\n    //     }\n    //   );\n\n    //   if (!response.ok) {\n    //     throw new Error('Request failed!');\n    //   }\n\n    //   const data = await response.json();\n\n    //   const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n    //   const createdTask = { id: generatedId, text: taskText };\n\n      // props.onAddTask(createdTask);\n    // } catch (err) {\n    //   setError(err.message || 'Something went wrong!');\n    // }\n    // setIsLoading(false);\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}