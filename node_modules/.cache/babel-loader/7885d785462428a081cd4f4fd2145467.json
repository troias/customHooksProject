{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nexport const addr = 'https://react-http-1-f6f8f-default-rtdb.firebaseio.com/tasks.json, method = \"GET\"';\nexport const useFetch = async (requestConfig, applyData) => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState({});\n\n  const fetchItem = async requestConfig => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      let resp = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        headers: requestConfig.headers ? requestConfig.header : {},\n        body: requestConfig.headers ? JSON.stringify(requestConfig.body) : null\n      });\n\n      if (!resp.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await resp.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n\n    setIsLoading(false);\n  };\n\n  return {\n    isLoading,\n    error,\n    fetchItem\n  };\n};\n\n_s(useFetch, \"uQgBIBDQAWjdaId4V57g8YC6zUY=\");","map":{"version":3,"sources":["/home/troias/udemy/project-6/04-onwards-to-a-more-realistic-example/src/customHooks/useFetch.js"],"names":["React","useState","useEffect","addr","useFetch","requestConfig","applyData","isLoading","setIsLoading","error","setError","data","setData","fetchItem","resp","fetch","url","method","headers","header","body","JSON","stringify","ok","Error","json","err","message"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAO,MAAMC,IAAI,GAAG,mFAAb;AAEP,OAAO,MAAMC,QAAQ,GAAG,OAAOC,aAAP,EAAsBC,SAAtB,KAAoC;AAAA;;AAExD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAAEU,IAAF,EAAQC,OAAR,IAAmBX,QAAQ,CAAC,EAAD,CAAjC;;AAEA,QAAMY,SAAS,GAAG,MAAOR,aAAP,IAAyB;AAEvCG,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AAEA,QAAI;AAEA,UAAII,IAAI,GAAG,MAAMC,KAAK,CAClBV,aAAa,CAACW,GADI,EACC;AACfC,QAAAA,MAAM,EAAEZ,aAAa,CAACY,MAAd,GAAuBZ,aAAa,CAACY,MAArC,GAA8C,KADvC;AAEfC,QAAAA,OAAO,EAAEb,aAAa,CAACa,OAAd,GAAwBb,aAAa,CAACc,MAAtC,GAA+C,EAFzC;AAGfC,QAAAA,IAAI,EAAEf,aAAa,CAACa,OAAd,GAAwBG,IAAI,CAACC,SAAL,CAAejB,aAAa,CAACe,IAA7B,CAAxB,GAA6D;AAHpD,OADD,CAAtB;;AAQA,UAAI,CAACN,IAAI,CAACS,EAAV,EAAc;AACV,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACH;;AAED,YAAMb,IAAI,GAAG,MAAMG,IAAI,CAACW,IAAL,EAAnB;AAEAnB,MAAAA,SAAS,CAACK,IAAD,CAAT;AAGH,KAnBD,CAmBE,OAAOe,GAAP,EAAY;AACVhB,MAAAA,QAAQ,CAACgB,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACH;;AACDnB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GA5BD;;AA8BA,SAAO;AACHD,IAAAA,SADG;AAEHE,IAAAA,KAFG;AAGHI,IAAAA;AAHG,GAAP;AAKH,CAzCM;;GAAMT,Q","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nexport const addr = 'https://react-http-1-f6f8f-default-rtdb.firebaseio.com/tasks.json, method = \"GET\"'\r\n\r\nexport const useFetch = async (requestConfig, applyData) => {\r\n\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n    const [ data, setData] = useState({})\r\n\r\n    const fetchItem = async (requestConfig) => {\r\n\r\n        setIsLoading(true);\r\n        setError(null);\r\n\r\n        try {\r\n\r\n            let resp = await fetch(\r\n                requestConfig.url, {\r\n                    method: requestConfig.method ? requestConfig.method : \"GET\",\r\n                    headers: requestConfig.headers ? requestConfig.header : {} , \r\n                    body: requestConfig.headers ? JSON.stringify(requestConfig.body) : null\r\n                }\r\n                )\r\n\r\n            if (!resp.ok) {\r\n                throw new Error('Request failed!');\r\n            }\r\n\r\n            const data = await resp.json();\r\n\r\n            applyData(data)\r\n\r\n        \r\n        } catch (err) {\r\n            setError(err.message || 'Something went wrong!');\r\n        }\r\n        setIsLoading(false);\r\n    }\r\n   \r\n    return {\r\n        isLoading,\r\n        error,\r\n        fetchItem\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}