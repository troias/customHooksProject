{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from 'react';\nexport const addr = 'https://react-http-1-f6f8f-default-rtdb.firebaseio.com/tasks.json, method = \"GET\"';\nexport const useFetch = async () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchItem = useCallback(async (requestConfig, applyData) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      let resp = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        headers: requestConfig.headers ? requestConfig.header : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n\n      if (!resp.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await resp.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n\n    setIsLoading(false);\n  }, []);\n  return {\n    fetchItem,\n    isLoading,\n    error\n  };\n};\n\n_s(useFetch, \"2HhPtrYMCCRGT9cLCBF9/DMcJXE=\");","map":{"version":3,"sources":["/home/troias/udemy/project-6/04-onwards-to-a-more-realistic-example/src/customHooks/useFetch.js"],"names":["useState","useCallback","addr","useFetch","isLoading","setIsLoading","error","setError","fetchItem","requestConfig","applyData","resp","fetch","url","method","headers","header","body","JSON","stringify","ok","Error","data","json","err","message"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AAEA,OAAO,MAAMC,IAAI,GAAG,mFAAb;AAEP,OAAO,MAAMC,QAAQ,GAAG,YAAY;AAAA;;AAEhC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMQ,SAAS,GAAGP,WAAW,CAAC,OAAOQ,aAAP,EAAsBC,SAAtB,KAAqC;AAE/DL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AAEA,QAAI;AAEA,UAAII,IAAI,GAAG,MAAMC,KAAK,CAAEH,aAAa,CAACI,GAAhB,EAAqB;AACnCC,QAAAA,MAAM,EAAEL,aAAa,CAACK,MAAd,GAAuBL,aAAa,CAACK,MAArC,GAA8C,KADnB;AAEnCC,QAAAA,OAAO,EAAEN,aAAa,CAACM,OAAd,GAAwBN,aAAa,CAACO,MAAtC,GAA+C,EAFrB;AAGnCC,QAAAA,IAAI,EAAER,aAAa,CAACQ,IAAd,GAAqBC,IAAI,CAACC,SAAL,CAAeV,aAAa,CAACQ,IAA7B,CAArB,GAA0D;AAH7B,OAArB,CAAtB;;AAOA,UAAI,CAACN,IAAI,CAACS,EAAV,EAAc;AACV,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACH;;AAED,YAAMC,IAAI,GAAG,MAAMX,IAAI,CAACY,IAAL,EAAnB;AAEAb,MAAAA,SAAS,CAACY,IAAD,CAAT;AAGH,KAlBD,CAkBE,OAAOE,GAAP,EAAY;AACVjB,MAAAA,QAAQ,CAACiB,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACH;;AACDpB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GA3B4B,EA2B1B,EA3B0B,CAA7B;AA6BA,SAAO;AACHG,IAAAA,SADG;AAEHJ,IAAAA,SAFG;AAGHE,IAAAA;AAHG,GAAP;AAMH,CAxCM;;GAAMH,Q","sourcesContent":["import { useState, useCallback } from 'react'\r\n\r\nexport const addr = 'https://react-http-1-f6f8f-default-rtdb.firebaseio.com/tasks.json, method = \"GET\"'\r\n\r\nexport const useFetch = async () => {\r\n\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const fetchItem = useCallback(async (requestConfig, applyData ) => {\r\n\r\n        setIsLoading(true);\r\n        setError(null);\r\n\r\n        try {\r\n\r\n            let resp = await fetch( requestConfig.url, {\r\n                    method: requestConfig.method ? requestConfig.method : \"GET\",\r\n                    headers: requestConfig.headers ? requestConfig.header : {} , \r\n                    body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\r\n                }\r\n                )\r\n\r\n            if (!resp.ok) {\r\n                throw new Error('Request failed!');\r\n            }\r\n\r\n            const data = await resp.json();\r\n\r\n            applyData(data)\r\n\r\n        \r\n        } catch (err) {\r\n            setError(err.message || 'Something went wrong!');\r\n        }\r\n        setIsLoading(false);\r\n    }, [])\r\n   \r\n    return {\r\n        fetchItem,\r\n        isLoading,\r\n        error,\r\n  \r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}