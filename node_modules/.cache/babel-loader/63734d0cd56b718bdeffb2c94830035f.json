{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nconst addr = 'https://react-http-1-f6f8f-default-rtdb.firebaseio.com/tasks.json, method = \"GET\"';\nexport const useFetch = async (method = 'GET', address = addr) => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [setData] = useState({});\n\n  const fetchItem = async (method, taskText, address) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      let resp;\n\n      if (method === \"POST\") {\n        resp = await fetch(address, {\n          method: 'POST',\n          body: JSON.stringify({\n            text: taskText\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n      } else {\n        resp = await fetch(address);\n      }\n\n      if (!resp.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await resp.json();\n      setData(data);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n\n    setIsLoading(false);\n  };\n\n  return [data, fetchItem, isLoading, error];\n};\n\n_s(useFetch, \"MyGwmlW014pXo9iNTlxPTlGjVws=\");","map":{"version":3,"sources":["/home/troias/udemy/project-6/04-onwards-to-a-more-realistic-example/src/customHooks/useFetch.js"],"names":["React","useState","useEffect","addr","useFetch","method","address","isLoading","setIsLoading","error","setError","setData","fetchItem","taskText","resp","fetch","body","JSON","stringify","text","headers","ok","Error","data","json","err","message"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,MAAMC,IAAI,GAAG,mFAAb;AAEA,OAAO,MAAMC,QAAQ,GAAG,OAAOC,MAAM,GAAG,KAAhB,EAAuBC,OAAO,GAAGH,IAAjC,KAA2C;AAAA;;AAE/D,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAAEU,OAAF,IAAaV,QAAQ,CAAC,EAAD,CAA3B;;AAEA,QAAMW,SAAS,GAAG,OAAOP,MAAP,EAAeQ,QAAf,EAAyBP,OAAzB,KAAqC;AAEnDE,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AAEA,QAAI;AAEA,UAAII,IAAJ;;AAEA,UAAIT,MAAM,KAAK,MAAf,EAAuB;AACnBS,QAAAA,IAAI,GAAG,MAAMC,KAAK,CACdT,OADc,EACL;AACTD,UAAAA,MAAM,EAAE,MADC;AAETW,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,YAAAA,IAAI,EAAEN;AAAR,WAAf,CAFG;AAGTO,UAAAA,OAAO,EAAE;AACL,4BAAgB;AADX;AAHA,SADK,CAAlB;AAQH,OATD,MASO;AACHN,QAAAA,IAAI,GAAG,MAAMC,KAAK,CACdT,OADc,CAAlB;AAEH;;AAGD,UAAI,CAACQ,IAAI,CAACO,EAAV,EAAc;AACV,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACH;;AAED,YAAMC,IAAI,GAAG,MAAMT,IAAI,CAACU,IAAL,EAAnB;AAEAb,MAAAA,OAAO,CAACY,IAAD,CAAP;AAGH,KA5BD,CA4BE,OAAOE,GAAP,EAAY;AACVf,MAAAA,QAAQ,CAACe,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACH;;AACDlB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GArCD;;AAuCA,SAAO,CAAEe,IAAF,EAAQX,SAAR,EAAmBL,SAAnB,EAA8BE,KAA9B,CAAP;AACH,CA9CM;;GAAML,Q","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nconst addr = 'https://react-http-1-f6f8f-default-rtdb.firebaseio.com/tasks.json, method = \"GET\"'\r\n\r\nexport const useFetch = async (method = 'GET', address = addr,) => {\r\n\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n    const [ setData] = useState({})\r\n\r\n    const fetchItem = async (method, taskText, address) => {\r\n\r\n        setIsLoading(true);\r\n        setError(null);\r\n\r\n        try {\r\n\r\n            let resp\r\n\r\n            if (method === \"POST\") {\r\n                resp = await fetch(\r\n                    address, {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({ text: taskText }),\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                })\r\n            } else {\r\n                resp = await fetch(\r\n                    address)\r\n            }\r\n\r\n\r\n            if (!resp.ok) {\r\n                throw new Error('Request failed!');\r\n            }\r\n\r\n            const data = await resp.json();\r\n\r\n            setData(data)\r\n\r\n        \r\n        } catch (err) {\r\n            setError(err.message || 'Something went wrong!');\r\n        }\r\n        setIsLoading(false);\r\n    }\r\n   \r\n    return [ data, fetchItem, isLoading, error];\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}