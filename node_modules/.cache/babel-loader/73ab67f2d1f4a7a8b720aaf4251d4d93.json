{"ast":null,"code":"var _jsxFileName = \"/home/troias/udemy/project-6/04-onwards-to-a-more-realistic-example/src/components/NewTask/NewTask.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const enterTaskHandler = async taskText => {// setIsLoading(true);\n    // setError(null);\n    // try {\n    //   const response = await fetch(\n    //     'https://react-http-1-f6f8f-default-rtdb.firebaseio.com/tasks.json',\n    //     {\n    //       method: 'POST',\n    //       body: JSON.stringify({ text: taskText }),\n    //       headers: {\n    //         'Content-Type': 'application/json',\n    //       },\n    //     }\n    //   );\n    //   if (!response.ok) {\n    //     throw new Error('Request failed!');\n    //   }\n    //   const data = await response.json();\n    //   const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n    //   const createdTask = { id: generatedId, text: taskText };\n    //   props.onAddTask(createdTask);\n    // } catch (err) {\n    //   setError(err.message || 'Something went wrong!');\n    // }\n    // setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTask, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["/home/troias/udemy/project-6/04-onwards-to-a-more-realistic-example/src/components/NewTask/NewTask.js"],"names":["useState","Section","TaskForm","NewTask","props","isLoading","setIsLoading","error","setError","enterTaskHandler","taskText"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMS,gBAAgB,GAAG,MAAOC,QAAP,IAAoB,CAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACD,GA7BD;;AA+BA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,WAAW,EAAED,gBAAvB;AAAyC,MAAA,OAAO,EAAEJ;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,KAAK,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAzCD;;GAAMJ,O;;KAAAA,O;AA2CN,eAAeA,OAAf","sourcesContent":["import { useState } from 'react';\n\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\n\nconst NewTask = (props) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const enterTaskHandler = async (taskText) => {\n    // setIsLoading(true);\n    // setError(null);\n    // try {\n    //   const response = await fetch(\n    //     'https://react-http-1-f6f8f-default-rtdb.firebaseio.com/tasks.json',\n    //     {\n    //       method: 'POST',\n    //       body: JSON.stringify({ text: taskText }),\n    //       headers: {\n    //         'Content-Type': 'application/json',\n    //       },\n    //     }\n    //   );\n\n    //   if (!response.ok) {\n    //     throw new Error('Request failed!');\n    //   }\n\n    //   const data = await response.json();\n\n    //   const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n    //   const createdTask = { id: generatedId, text: taskText };\n\n    //   props.onAddTask(createdTask);\n    // } catch (err) {\n    //   setError(err.message || 'Something went wrong!');\n    // }\n    // setIsLoading(false);\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}